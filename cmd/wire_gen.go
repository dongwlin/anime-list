// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"database/sql"
	"fmt"
	"github.com/dongwlin/anime-list/internal/db"
	"github.com/dongwlin/anime-list/internal/db/schema"
	"github.com/dongwlin/anime-list/internal/handler"
	"github.com/dongwlin/anime-list/internal/server"
	"github.com/google/wire"
	"os"
)

// Injectors from wire.go:

func newServer() *server.HttpServer {
	sqlDB := connDB()
	store := db.NewStore(sqlDB)
	handlerHandler := handler.NewHandler(store)
	pingHandler := handler.NewPingHandler(handlerHandler)
	animeHandler := handler.NewAnimeHandler(handlerHandler)
	seasonHandler := handler.NewSeasonHandler(handlerHandler)
	episodeHandler := handler.NewEpisodeHandler(handlerHandler)
	theaterHandler := handler.NewTheaterHandler(handlerHandler)
	httpServer := server.NewHttpServer(pingHandler, animeHandler, seasonHandler, episodeHandler, theaterHandler)
	return httpServer
}

// wire.go:

var handlerSet = wire.NewSet(handler.NewHandler, handler.NewPingHandler, handler.NewAnimeHandler, handler.NewSeasonHandler, handler.NewEpisodeHandler, handler.NewTheaterHandler)

func connDB() *sql.DB {
	conn, err := sql.Open("sqlite3", "./data.db")
	if err != nil {
		fmt.Printf("sql.Open() error: %v\n", err)
		os.Exit(1)
	}
	_, err = conn.Exec(schema.Schema)
	if err != nil {
		fmt.Printf("conn.Exec() error: %v\n", err)
		os.Exit(1)
	}
	return conn
}
